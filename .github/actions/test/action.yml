---
inputs:
  base_url:
    description: Base URL
    required: false
    default: http://0.0.0.0:8080/monitorix
  cgi_url:
    description: CGI URL
    required: false
    default: http://0.0.0.0:8080/monitorix-cgi/monitorix.cgi
  image_format:
    description: Image Format
    required: false
    default: PNG

runs:
  using: composite
  steps:
    - name: Update `log_file` paths, `httpd_builtin.group` & `image_format`
      run: |
        sed \
          -e "s#/var/log/monitorix\$#$(pwd)/monitorix.log#g" \
          -e "s#/var/log/monitorix-httpd\$#$(pwd)/monitorix-httpd.log#g" \
          -e "s#\tgroup = .*#\tgroup = $(groups nobody | cut -d: -f2)#g" \
          -e "s#^image_format = .*#image_format = ${{ inputs.image_format }}#g" \
          -e "s#/var/lib/monitorix#$(pwd)/var/lib#g" \
          /etc/monitorix/monitorix.conf > monitorix-test.conf
      shell: bash --noprofile --norc -euxo pipefail {0}

    - name: Start `Monitorix`
      run: |
        mkdir -p var/lib/www/cgi
        touch monitorix.log monitorix-httpd.log
        ${{ !matrix.image && 'sudo' || '' }} monitorix -c monitorix-test.conf -p monitorix.pid
      shell: bash --noprofile --norc -euxo pipefail {0}

    - name: Wait for `Monitorix`
      run: |
        while ! curl --fail "${{ inputs.cgi_url }}" &> /dev/null
        do
          sleep 5
        done
      shell: bash --noprofile --norc -euxo pipefail {0}

    - name: Curl `index.html`
      run: |
        curl --silent "${{ inputs.base_url }}/index.html"
      shell: bash --noprofile --norc -euxo pipefail {0}

    - name: Curl `monitorix.cgi`
      run: |
        curl --silent "${{ inputs.cgi_url }}?mode=localhost&graph=all&when=1day"
      shell: bash --noprofile --norc -euxo pipefail {0}

    - name: Curl `imgs/system1z.1day.*`
      run: |
        format="${{ inputs.image_format }}"
        suffix="${format,,}"
        curl --silent "${{ inputs.base_url }}/imgs/system1z.1day.${suffix}"
      shell: bash --noprofile --norc -euxo pipefail {0}

    - name: Kill `Monitorix`
      run: |
        ${{ !matrix.image && 'sudo' || '' }} kill $(cat monitorix.pid)
        ${{ !matrix.image && 'sudo' || '' }} rm --force monitorix.pid
      shell: bash --noprofile --norc -euxo pipefail {0}
